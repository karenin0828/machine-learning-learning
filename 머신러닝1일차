#넘파이 배열
이라는 게 있다. 파이썬에서 데이터를 더 효과적으로 저장하는 방법이다.
이는 효과적인데 예를 들어서 그냥 배열 [1,2,3]에다가 2를 곱하면 반복이 [123123]이 되지만
넘파이 배열에다 2를 곱하면 각 벡터(각 원소)에 2가 곱해진다.

#텐서를 만드는 방법
은 크게 두가지 

torch.from_numpy(a_np)

torch.tensor(a_np)

가 있는데 첫번째꺼는 기존 넘파이 배열과 주소를 공유하므로 하나가 바뀌면 나머지 하나도 바뀐다.
즉, 이렇게 만든 텐서의 원소를 수정하면 넘파이 배열도 바뀌고 넘파이 배열이 수정되면 여기 텐서의 원소도 바뀐다.

하지만 두번째꺼는 새로운 텐서를 만드므로 기존 넘파이 배열을 수정해도 텐서의 값이 바뀌지 않는다. vice versa

#torch.함수

ones야, "주어진 모양의 텐서를 만들어주는데, 1로 채워줘."

zeros야, "주어진 모양의 텐서를 만들어주는데, 0으로 채워줘."

ones_like야, "입력 텐서와 동일한 모양의 텐서를 만들어주는데, 1로 채워줘."

zeros_like야, "입력 텐서와 동일한 모양의 텐서를 만들어주는데, 0으로 채워줘."



